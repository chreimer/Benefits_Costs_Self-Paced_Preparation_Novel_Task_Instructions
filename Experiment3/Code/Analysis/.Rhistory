rel_heights = c(1,1,1),
rel_widths = c(1,1,1),
labels = c("a","b","c"),
label_size = 12,
align = "v"
)
bigplot_PrepRTACCExeRT3
ggsave("Experiment3_PrepRTACCExeRT.png", width = 14, height = 6, units = "cm")
# plot Experiment 2 (in paper, it is called Experiment 3)
# prepRT
prepRT2 = input_Exp2 %>%
filter(prepRT > 100) %>%
filter(prepRT < 20000) %>%
filter(rt > 100) %>%
filter(rt < 3000) %>%
group_by(participant, block_type) %>%
summarise(prepRT = mean(prepRT))
prepRT2_forplot = prepRT2 %>%
group_by(block_type) %>%
summarise(mean.prepRT = mean(prepRT, na.rm = TRUE),
sd.prepRT = sd(prepRT, na.rm = TRUE),
n.prepRT = n()) %>%
mutate(se.prepRT = sd.prepRT / sqrt(n.prepRT),
lower.ci.prepRT = mean.prepRT - qt(1 - (0.05 / 2), n.prepRT - 1) * se.prepRT,
upper.ci.prepRT = mean.prepRT + qt(1 - (0.05 / 2), n.prepRT - 1) * se.prepRT)
level_order_prepRT = c("75%", "25%")
# plot
plot_prepRT2_p = ggplot(prepRT2_forplot, aes(x=factor(block_type, level = level_order_prepRT), y=mean.prepRT, group=1)) +
geom_errorbar(aes(ymin=lower.ci.prepRT, ymax=upper.ci.prepRT), width=.1, color="black", position="dodge") +
geom_line(color="black", width=2) +
geom_point(color="black", position="dodge", shape=17) +
scale_y_continuous(breaks = c(1000,2000,3000,4000,5000,6000), limits = c(1000,6000)) +
xlab("Image-alone Condition") +
ylab("Preparation RT (ms)") +
ggtitle("Experiment 3", subtitle = "Preparation phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
plot_prepRT2_p
# ACC
ACC2 = input_Exp2 %>%
filter(prepRT > 100) %>%
filter(prepRT < 20000) %>%
filter(rt > 100) %>%
filter(rt < 3000) %>%
group_by(participant, block_type, letter_block) %>%
summarise(ACC = mean(acc))
ACC2_forplot = ACC2 %>%
group_by(block_type, letter_block) %>%
summarise(mean.ACC = mean(ACC, na.rm = TRUE),
sd.ACC = sd(ACC, na.rm = TRUE),
n.ACC = n()) %>%
mutate(se.ACC = sd.ACC / sqrt(n.ACC),
lower.ci.ACC = mean.ACC - qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC,
upper.ci.ACC = mean.ACC + qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC)
level_order_ACC = c("75%", "25%")
# plot
plot_ACC2_p = ggplot(ACC2_forplot, aes(x=factor(block_type, level = level_order_ACC), y=mean.ACC, group=letter_block)) +
geom_errorbar(aes(ymin=lower.ci.ACC, ymax=upper.ci.ACC), width=.1, color=c("black","grey50","black","grey50")) +
geom_line(aes(color=c("image-alone trials","image-and-letter trials","image-alone trials","image-and-letter trials")), width=2) +
geom_point(aes(color=c("image-alone trials","image-and-letter trials","image-alone trials","image-and-letter trials")), shape=c(16,15,16,15)) +
scale_colour_manual(values=c("black","grey50","black","grey50")) +
scale_y_continuous(breaks = c(0.6,0.7,0.8,0.9,1.0), limits = c(0.6,1)) +
xlab("Image-alone Condition") +
ylab("Accuracy") +
ggtitle("Experiment 3", subtitle = "Execution phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.title = element_blank(),
legend.text = element_text(size=8),
legend.key = element_rect(fill = "white")) +
theme(legend.background = element_rect()) +
theme(legend.justification=c(1,0), legend.position=c(1,0.05))
plot_ACC2_p
# ExeRT
RT2 = input_Exp2 %>%
filter(prepRT > 100) %>%
filter(prepRT < 20000) %>%
filter(rt > 100) %>%
filter(rt < 3000) %>%
filter(correct == "true") %>%
group_by(participant, block_type, letter_block) %>%
summarise(RT = mean(rt))
RT2_forplot = RT2 %>%
group_by(block_type, letter_block) %>%
summarise(mean.RT = mean(RT, na.rm = TRUE),
sd.RT = sd(RT, na.rm = TRUE),
n.RT = n()) %>%
mutate(se.RT = sd.RT / sqrt(n.RT),
lower.ci.RT = mean.RT - qt(1 - (0.05 / 2), n.RT - 1) * se.RT,
upper.ci.RT = mean.RT + qt(1 - (0.05 / 2), n.RT - 1) * se.RT)
level_order_RT = c("75%", "25%")
# plot
plot_RT2_p = ggplot(RT2_forplot, aes(x=factor(block_type, level = level_order_RT), y=mean.RT, group=letter_block)) +
geom_errorbar(aes(ymin=lower.ci.RT, ymax=upper.ci.RT), width=.1, color=c("black","grey50","black","grey50")) +
geom_line(color=c("black","black","grey50","grey50"), width=2) +
geom_point(color=c("black","grey50","black","grey50"), shape=c(16,15,16,15)) +
scale_y_continuous(breaks = c(200,400,600,800,1000,1200), limits = c(0,1200)) +
xlab("Image-alone Condition") +
ylab("Execution RT (ms)") +
ggtitle("Experiment 3", subtitle = "Execution phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
plot_RT2_p
# combine all plots
bigplot_PrepRTACCExeRT3 <- plot_grid(plot_prepRT2_p, plot_ACC2_p, plot_RT2_p,
ncol = 3,
rel_heights = c(1,1,1),
rel_widths = c(1,1,1),
labels = c("a","b","c"),
label_size = 12,
align = "v"
)
bigplot_PrepRTACCExeRT3
ggsave("Experiment3_PrepRTACCExeRT.png", width = 14, height = 6, units = "cm")
# plot Experiment 2 (in paper, it is called Experiment 3)
# prepRT
prepRT2 = input_Exp2 %>%
filter(prepRT > 100) %>%
filter(prepRT < 20000) %>%
filter(rt > 100) %>%
filter(rt < 3000) %>%
group_by(participant, block_type) %>%
summarise(prepRT = mean(prepRT))
prepRT2_forplot = prepRT2 %>%
group_by(block_type) %>%
summarise(mean.prepRT = mean(prepRT, na.rm = TRUE),
sd.prepRT = sd(prepRT, na.rm = TRUE),
n.prepRT = n()) %>%
mutate(se.prepRT = sd.prepRT / sqrt(n.prepRT),
lower.ci.prepRT = mean.prepRT - qt(1 - (0.05 / 2), n.prepRT - 1) * se.prepRT,
upper.ci.prepRT = mean.prepRT + qt(1 - (0.05 / 2), n.prepRT - 1) * se.prepRT)
level_order_prepRT = c("75%", "25%")
# plot
plot_prepRT2_p = ggplot(prepRT2_forplot, aes(x=factor(block_type, level = level_order_prepRT), y=mean.prepRT, group=1)) +
geom_errorbar(aes(ymin=lower.ci.prepRT, ymax=upper.ci.prepRT), width=.1, color="black", position="dodge") +
geom_line(color="black", width=2) +
geom_point(color="black", position="dodge", shape=17) +
scale_y_continuous(breaks = c(1000,2000,3000,4000,5000,6000), limits = c(1000,6000)) +
xlab("Image-alone Condition") +
ylab("Preparation RT (ms)") +
ggtitle("Experiment 3", subtitle = "Preparation phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
plot_prepRT2_p
# ACC
ACC2 = input_Exp2 %>%
filter(prepRT > 100) %>%
filter(prepRT < 20000) %>%
filter(rt > 100) %>%
filter(rt < 3000) %>%
group_by(participant, block_type, letter_block) %>%
summarise(ACC = mean(acc))
ACC2_forplot = ACC2 %>%
group_by(block_type, letter_block) %>%
summarise(mean.ACC = mean(ACC, na.rm = TRUE),
sd.ACC = sd(ACC, na.rm = TRUE),
n.ACC = n()) %>%
mutate(se.ACC = sd.ACC / sqrt(n.ACC),
lower.ci.ACC = mean.ACC - qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC,
upper.ci.ACC = mean.ACC + qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC)
level_order_ACC = c("75%", "25%")
# plot
plot_ACC2_p = ggplot(ACC2_forplot, aes(x=factor(block_type, level = level_order_ACC), y=mean.ACC, group=letter_block)) +
geom_errorbar(aes(ymin=lower.ci.ACC, ymax=upper.ci.ACC), width=.1, color=c("black","grey50","black","grey50")) +
geom_line(aes(color=c("image-alone trials","image-and-letter trials","image-alone trials","image-and-letter trials")), width=2) +
geom_point(aes(color=c("image-alone trials","image-and-letter trials","image-alone trials","image-and-letter trials")), shape=c(16,15,16,15)) +
scale_colour_manual(values=c("black","grey50","black","grey50")) +
scale_y_continuous(breaks = c(0.6,0.7,0.8,0.9,1.0), limits = c(0.6,1)) +
xlab("Image-alone Condition") +
ylab("Accuracy") +
ggtitle("Experiment 3", subtitle = "Execution phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.title = element_blank(),
legend.text = element_text(size=8),
legend.key = element_rect(fill = "white")) +
theme(legend.background = element_rect()) +
theme(legend.justification=c(1,0), legend.position=c(1,0.05))
plot_ACC2_p
# ExeRT
RT2 = input_Exp2 %>%
filter(prepRT > 100) %>%
filter(prepRT < 20000) %>%
filter(rt > 100) %>%
filter(rt < 3000) %>%
filter(correct == "true") %>%
group_by(participant, block_type, letter_block) %>%
summarise(RT = mean(rt))
RT2_forplot = RT2 %>%
group_by(block_type, letter_block) %>%
summarise(mean.RT = mean(RT, na.rm = TRUE),
sd.RT = sd(RT, na.rm = TRUE),
n.RT = n()) %>%
mutate(se.RT = sd.RT / sqrt(n.RT),
lower.ci.RT = mean.RT - qt(1 - (0.05 / 2), n.RT - 1) * se.RT,
upper.ci.RT = mean.RT + qt(1 - (0.05 / 2), n.RT - 1) * se.RT)
level_order_RT = c("75%", "25%")
# plot
plot_RT2_p = ggplot(RT2_forplot, aes(x=factor(block_type, level = level_order_RT), y=mean.RT, group=letter_block)) +
geom_errorbar(aes(ymin=lower.ci.RT, ymax=upper.ci.RT), width=.1, color=c("black","grey50","black","grey50")) +
geom_line(aes(color=c("image-alone trials","image-and-letter trials","image-alone trials","image-and-letter trials")), width=2) +
geom_point(aes(color=c("image-alone trials","image-and-letter trials","image-alone trials","image-and-letter trials")), shape=c(16,15,16,15)) +
scale_colour_manual(values=c("black","grey50","black","grey50")) +
scale_y_continuous(breaks = c(200,400,600,800,1000,1200), limits = c(0,1200)) +
xlab("Image-alone Condition") +
ylab("Execution RT (ms)") +
ggtitle("Experiment 3", subtitle = "Execution phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.title = element_blank(),
legend.text = element_text(size=8),
legend.key = element_rect(fill = "white")) +
theme(legend.background = element_rect()) +
theme(legend.justification=c(1,0), legend.position=c(1,0.05))
plot_RT2_p
# combine all plots
bigplot_PrepRTACCExeRT3 <- plot_grid(plot_prepRT2_p, plot_ACC2_p, plot_RT2_p,
ncol = 3,
rel_heights = c(1,1,1),
rel_widths = c(1,1,1),
labels = c("a","b","c"),
label_size = 12,
align = "v"
)
bigplot_PrepRTACCExeRT3
ggsave("Experiment3_PrepRTACCExeRT.png", width = 14, height = 6, units = "cm")
# plot Experiment 2 (in paper, it is called Experiment 3)
# prepRT
prepRT2 = input_Exp2 %>%
filter(prepRT > 100) %>%
filter(prepRT < 20000) %>%
filter(rt > 100) %>%
filter(rt < 3000) %>%
group_by(participant, block_type) %>%
summarise(prepRT = mean(prepRT))
prepRT2_forplot = prepRT2 %>%
group_by(block_type) %>%
summarise(mean.prepRT = mean(prepRT, na.rm = TRUE),
sd.prepRT = sd(prepRT, na.rm = TRUE),
n.prepRT = n()) %>%
mutate(se.prepRT = sd.prepRT / sqrt(n.prepRT),
lower.ci.prepRT = mean.prepRT - qt(1 - (0.05 / 2), n.prepRT - 1) * se.prepRT,
upper.ci.prepRT = mean.prepRT + qt(1 - (0.05 / 2), n.prepRT - 1) * se.prepRT)
level_order_prepRT = c("75%", "25%")
# plot
plot_prepRT2_p = ggplot(prepRT2_forplot, aes(x=factor(block_type, level = level_order_prepRT), y=mean.prepRT, group=1)) +
geom_errorbar(aes(ymin=lower.ci.prepRT, ymax=upper.ci.prepRT), width=.1, color="black", position="dodge") +
geom_line(color="black", width=2) +
geom_point(color="black", position="dodge", shape=17) +
scale_y_continuous(breaks = c(1000,2000,3000,4000,5000,6000), limits = c(1000,6000)) +
xlab("Image-alone Condition") +
ylab("Preparation RT (ms)") +
ggtitle("Experiment 3", subtitle = "Preparation phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
plot_prepRT2_p
# ACC
ACC2 = input_Exp2 %>%
filter(prepRT > 100) %>%
filter(prepRT < 20000) %>%
filter(rt > 100) %>%
filter(rt < 3000) %>%
group_by(participant, block_type, letter_block) %>%
summarise(ACC = mean(acc))
ACC2_forplot = ACC2 %>%
group_by(block_type, letter_block) %>%
summarise(mean.ACC = mean(ACC, na.rm = TRUE),
sd.ACC = sd(ACC, na.rm = TRUE),
n.ACC = n()) %>%
mutate(se.ACC = sd.ACC / sqrt(n.ACC),
lower.ci.ACC = mean.ACC - qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC,
upper.ci.ACC = mean.ACC + qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC)
level_order_ACC = c("75%", "25%")
# plot
plot_ACC2_p = ggplot(ACC2_forplot, aes(x=factor(block_type, level = level_order_ACC), y=mean.ACC, group=letter_block)) +
geom_errorbar(aes(ymin=lower.ci.ACC, ymax=upper.ci.ACC), width=.1, color=c("black","grey50","black","grey50")) +
geom_line(aes(color=c("image-alone trials","image-and-letter trials","image-alone trials","image-and-letter trials")), width=2) +
geom_point(aes(color=c("image-alone trials","image-and-letter trials","image-alone trials","image-and-letter trials")), shape=c(16,15,16,15)) +
scale_colour_manual(values=c("black","grey50","black","grey50")) +
scale_y_continuous(breaks = c(0.6,0.7,0.8,0.9,1.0), limits = c(0.6,1)) +
xlab("Image-alone Condition") +
ylab("Accuracy") +
ggtitle("Experiment 3", subtitle = "Execution phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.title = element_blank(),
legend.text = element_text(size=8),
legend.key = element_rect(fill = "white")) +
theme(legend.background = element_rect()) +
theme(legend.justification=c(1,0), legend.position=c(1,0.05))
plot_ACC2_p
# ExeRT
RT2 = input_Exp2 %>%
filter(prepRT > 100) %>%
filter(prepRT < 20000) %>%
filter(rt > 100) %>%
filter(rt < 3000) %>%
filter(correct == "true") %>%
group_by(participant, block_type, letter_block) %>%
summarise(RT = mean(rt))
RT2_forplot = RT2 %>%
group_by(block_type, letter_block) %>%
summarise(mean.RT = mean(RT, na.rm = TRUE),
sd.RT = sd(RT, na.rm = TRUE),
n.RT = n()) %>%
mutate(se.RT = sd.RT / sqrt(n.RT),
lower.ci.RT = mean.RT - qt(1 - (0.05 / 2), n.RT - 1) * se.RT,
upper.ci.RT = mean.RT + qt(1 - (0.05 / 2), n.RT - 1) * se.RT)
level_order_RT = c("75%", "25%")
# plot
plot_RT2_p = ggplot(RT2_forplot, aes(x=factor(block_type, level = level_order_RT), y=mean.RT, group=letter_block)) +
geom_errorbar(aes(ymin=lower.ci.RT, ymax=upper.ci.RT), width=.1, color=c("black","grey50","black","grey50")) +
geom_line(aes(color=c("image-alone trials","image-and-letter trials","image-alone trials","image-and-letter trials")), width=2) +
geom_point(aes(color=c("image-alone trials","image-and-letter trials","image-alone trials","image-and-letter trials")), shape=c(16,15,16,15)) +
scale_colour_manual(values=c("black","grey50","black","grey50")) +
scale_y_continuous(breaks = c(200,400,600,800,1000,1200), limits = c(0,1200)) +
xlab("Image-alone Condition") +
ylab("Execution RT (ms)") +
ggtitle("Experiment 3", subtitle = "Execution phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.title = element_blank(),
legend.text = element_text(size=8),
legend.key = element_rect(fill = "white")) +
theme(legend.background = element_rect()) +
theme(legend.justification=c(1,0), legend.position=c(1,0.05))
plot_RT2_p
# combine all plots
bigplot_PrepRTACCExeRT3 <- plot_grid(plot_prepRT2_p, plot_ACC2_p, plot_RT2_p,
ncol = 3,
rel_heights = c(1,1,1),
rel_widths = c(1,1,1),
labels = c("a","b","c"),
label_size = 12,
align = "v"
)
bigplot_PrepRTACCExeRT3
ggsave("Experiment3_PrepRTACCExeRT.png", width = 14, height = 6, units = "cm")
knitr::opts_chunk$set(echo = FALSE)
library(afex)
library(BayesFactor)
library(car)
library(cowplot)
library(DataCombine)
library(data.table)
library(extrafont)
library(ez)
library(ggpubr)
library(gridExtra)
library(knitr)
library(tidyverse)
# clear directory
rm(list=ls())
# open files Exp 2
input_Exp2 = data.frame()
files <- dir(path = "../../Data/Raw", pattern = "CIA_Preparation_Exp2_*")
for (i in files) {
tmp <- read_csv(file = file.path("../../Data/Raw/", i), col_types = cols())
tmp$id = i
# add the files to the data frame
input_Exp2 = rbind (input_Exp2, tmp)
rm(tmp)
}
# convert some factor variables to numeric variables
input_Exp2$block_number = as.numeric(as.character(input_Exp2$block_number))
input_Exp2$prepRT = as.numeric(as.character(input_Exp2$prepRT))
input_Exp2$rt = as.numeric(as.character(input_Exp2$rt))
# add numeric equivalent for correct variable; correct = TRUE = 1, correct = FALSE = 0
input_Exp2 = input_Exp2 %>%
mutate(acc = correct)
input_Exp2$acc = as.integer(as.logical(input_Exp2$acc))
# filter questionnaire data for the analysis
input_Exp2 = input_Exp2 %>%
filter(block_number <= 96)
# block_type: rename 1 to 25%, rename 0 to 100%-image-alone
# letter_block: rename 0 to image-alone, rename 1 to image-and-letter
input_Exp2$block_type[input_Exp2$block_type == "25"] = "25%"
input_Exp2$block_type[input_Exp2$block_type == "75"] = "75%"
input_Exp2$letter_block[input_Exp2$letter_block == "0"] = "image-alone"
input_Exp2$letter_block[input_Exp2$letter_block == "1"] = "image-and-letter"
# rename prolific_ID into participant
names(input_Exp2)[1] = "participant"
# add Experiment name
input_Exp2 = input_Exp2 %>%
mutate(experiment = "2")
# open files Exp 3
input_Exp3 = data.frame()
files <- dir(path = "../../Data/Raw", pattern = "CIA_Preparation_Exp3_*")
for (i in files) {
tmp <- read_csv(file = file.path("../../Data/Raw/", i), col_types = cols())
tmp$id = i
# add the files to the data frame
input_Exp3 = rbind (input_Exp3, tmp)
rm(tmp)
}
# convert some factor variables to numeric variables
input_Exp3$block_number = as.numeric(as.character(input_Exp3$block_number))
input_Exp3$prepRT = as.numeric(as.character(input_Exp3$prepRT))
input_Exp3$rt = as.numeric(as.character(input_Exp3$rt))
# add numeric equivalent for correct variable; correct = TRUE = 1, correct = FALSE = 0
input_Exp3 = input_Exp3 %>%
mutate(acc = correct)
input_Exp3$acc = as.integer(as.logical(input_Exp3$acc))
# filter questionnaire data for the analysis
input_Exp3 = input_Exp3 %>%
filter(block_number <= 96)
# block_type: rename 1 to 25%, rename 0 to 100%-image-alone
# letter_block: rename 0 to image-alone, rename 1 to image-and-letter
input_Exp3$block_type[input_Exp3$block_type == "25"] = "25%"
input_Exp3$block_type[input_Exp3$block_type == "75"] = "75%"
input_Exp3$letter_block[input_Exp3$letter_block == "0"] = "image-alone"
input_Exp3$letter_block[input_Exp3$letter_block == "1"] = "image-and-letter"
# rename prolific_ID into participant
names(input_Exp3)[1] = "participant"
# remove columns stimulus_html and image_position
input_Exp3$stimulus_html <- NULL
input_Exp3$image_position <- NULL
# add Experiment name
input_Exp3 = input_Exp3 %>%
mutate(experiment = "3")
### combine Experiments 2 and 3
input_between = rbind(input_Exp2, input_Exp3)
