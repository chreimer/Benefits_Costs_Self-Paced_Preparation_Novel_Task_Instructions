prepRT0_forplot = prepRT_pairsplit0 %>%
group_by(fasterPreparation) %>%
summarise(mean.prepRT = mean(prepRT, na.rm = TRUE),
sd.prepRT = sd(prepRT, na.rm = TRUE),
n.prepRT = n()) %>%
mutate(se.prepRT = sd.prepRT / sqrt(n.prepRT),
lower.ci.prepRT = mean.prepRT - qt(1 - (0.05 / 2), n.prepRT - 1) * se.prepRT,
upper.ci.prepRT = mean.prepRT + qt(1 - (0.05 / 2), n.prepRT - 1) * se.prepRT)
# plot
plot_prepRT0_pPEP = ggplot(prepRT0_forplot, aes(x=factor(fasterPreparation), y=mean.prepRT, group=1)) +
geom_errorbar(aes(ymin=lower.ci.prepRT, ymax=upper.ci.prepRT), width=.1, color="black", position="dodge") +
geom_line(color="black", width=2) +
geom_point(color="black", position="dodge", shape=17) +
scale_y_continuous(breaks = c(1000,2000,3000,4000,5000,6000), limits = c(1000,6000)) +
xlab("Preparation") +
ylab("Preparation RT (ms)") +
ggtitle("Experiment 1", subtitle = "Preparation phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#plot_prepRT0_pPEP
# get data ready and plot mean ACC of the pair-split analysis
# fasterPreparation: rename TRUE to fast, rename FALSE to slow
ACC_pairsplit0$fasterPreparation[ACC_pairsplit0$fasterPreparation == "TRUE"] = "short"
ACC_pairsplit0$fasterPreparation[ACC_pairsplit0$fasterPreparation == "FALSE"] = "long"
ACC0_forplot = ACC_pairsplit0 %>%
group_by(fasterPreparation) %>%
summarise(mean.ACC = mean(ACC, na.rm = TRUE),
sd.ACC = sd(ACC, na.rm = TRUE),
n.ACC = n()) %>%
mutate(se.ACC = sd.ACC / sqrt(n.ACC),
lower.ci.ACC = mean.ACC - qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC,
upper.ci.ACC = mean.ACC + qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC)
# plot
plot_ACC0_pPEP = ggplot(ACC0_forplot, aes(x=factor(fasterPreparation), y=mean.ACC, group=1)) +
geom_errorbar(aes(ymin=lower.ci.ACC, ymax=upper.ci.ACC), width=.1, color="black", position="dodge") +
geom_line(color="black", width=2) +
geom_point(color="black", position="dodge", stat="identity", shape=16) +
scale_y_continuous(breaks = c(0.6,0.7,0.8,0.9,1.0), limits = c(0.6,1)) +
xlab("Preparation") +
ylab("Accuracy") +
ggtitle("Experiment 1", subtitle = "Execution phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#plot_ACC0_pPEP
# get data ready and plot mean exeRT of the pair-split analysis
# fasterPreparation: rename TRUE to fast, rename FALSE to slow
RT_pairsplit0$fasterPreparation[RT_pairsplit0$fasterPreparation == "TRUE"] = "short"
RT_pairsplit0$fasterPreparation[RT_pairsplit0$fasterPreparation == "FALSE"] = "long"
RT0_forplot = RT_pairsplit0 %>%
group_by(fasterPreparation) %>%
summarise(mean.RT = mean(RT, na.rm = TRUE),
sd.RT = sd(RT, na.rm = TRUE),
n.RT = n()) %>%
mutate(se.RT = sd.RT / sqrt(n.RT),
lower.ci.RT = mean.RT - qt(1 - (0.05 / 2), n.RT - 1) * se.RT,
upper.ci.RT = mean.RT + qt(1 - (0.05 / 2), n.RT - 1) * se.RT)
# plot
plot_RT0_pPEP = ggplot(RT0_forplot, aes(x=factor(fasterPreparation), y=mean.RT, group=1)) +
geom_errorbar(aes(ymin=lower.ci.RT, ymax=upper.ci.RT), width=.1, color="black", position="dodge") +
geom_line(color="black", width=2) +
geom_point(color="black", position="dodge", shape = 16) +
scale_y_continuous(breaks = c(200,400,600,800,1000), limits = c(0,1000)) +
xlab("Preparation") +
ylab("Execution RT (ms)") +
ggtitle("Experiment 1", subtitle = "Execution phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#plot_RT0_pPEP
# combine allplots
bigplot_Exp0PEP <- plot_grid(plot_prepRT0_pPEP, plot_ACC0_pPEP, plot_RT0_pPEP,
ncol = 3,
rel_heights = c(1,1),
rel_widths = c(1,1),
labels = c("a","b", "c"),
label_size = 12,
align = "v"
)
bigplot_Exp0PEP
# Exp0 is Exp1 in the paper, hence the figure name
ggsave("Experiment1_PrepRTACCExeRT.png", width = 14, height = 6, units = "cm")
# get data ready and plot mean prepRT of the pair-split analysis
# fasterPreparation: rename TRUE to fast, rename FALSE to slow
prepRT_pairsplit0$fasterPreparation[prepRT_pairsplit0$fasterPreparation == "TRUE"] = "short"
prepRT_pairsplit0$fasterPreparation[prepRT_pairsplit0$fasterPreparation == "FALSE"] = "long"
prepRT0_forplot = prepRT_pairsplit0 %>%
group_by(fasterPreparation) %>%
summarise(mean.prepRT = mean(prepRT, na.rm = TRUE),
sd.prepRT = sd(prepRT, na.rm = TRUE),
n.prepRT = n()) %>%
mutate(se.prepRT = sd.prepRT / sqrt(n.prepRT),
lower.ci.prepRT = mean.prepRT - qt(1 - (0.05 / 2), n.prepRT - 1) * se.prepRT,
upper.ci.prepRT = mean.prepRT + qt(1 - (0.05 / 2), n.prepRT - 1) * se.prepRT)
# plot
plot_prepRT0_pPEP = ggplot(prepRT0_forplot, aes(x=factor(fasterPreparation), y=mean.prepRT, group=1)) +
geom_errorbar(aes(ymin=lower.ci.prepRT, ymax=upper.ci.prepRT), width=.1, color="black", position="dodge") +
geom_line(color="black", width=2) +
geom_point(color="black", position="dodge", shape=17) +
scale_y_continuous(breaks = c(1000,2000,3000,4000,5000,6000), limits = c(1000,6000)) +
xlab("Preparation") +
ylab("Preparation RT (ms)") +
ggtitle("Experiment 1", subtitle = "Preparation phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#plot_prepRT0_pPEP
# get data ready and plot mean ACC of the pair-split analysis
# fasterPreparation: rename TRUE to fast, rename FALSE to slow
ACC_pairsplit0$fasterPreparation[ACC_pairsplit0$fasterPreparation == "TRUE"] = "short"
ACC_pairsplit0$fasterPreparation[ACC_pairsplit0$fasterPreparation == "FALSE"] = "long"
ACC0_forplot = ACC_pairsplit0 %>%
group_by(fasterPreparation) %>%
summarise(mean.ACC = mean(ACC, na.rm = TRUE),
sd.ACC = sd(ACC, na.rm = TRUE),
n.ACC = n()) %>%
mutate(se.ACC = sd.ACC / sqrt(n.ACC),
lower.ci.ACC = mean.ACC - qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC,
upper.ci.ACC = mean.ACC + qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC)
# plot
plot_ACC0_pPEP = ggplot(ACC0_forplot, aes(x=factor(fasterPreparation), y=mean.ACC, group=1)) +
geom_errorbar(aes(ymin=lower.ci.ACC, ymax=upper.ci.ACC), width=.1, color="black", position="dodge") +
geom_line(color="black", width=2) +
geom_point(color="black", position="dodge", stat="identity", shape=16) +
scale_y_continuous(breaks = c(0.6,0.7,0.8,0.9,1.0), limits = c(0.6,1)) +
xlab("Preparation") +
ylab("Accuracy") +
ggtitle("Experiment 1", subtitle = "Execution phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#plot_ACC0_pPEP
# get data ready and plot mean exeRT of the pair-split analysis
# fasterPreparation: rename TRUE to fast, rename FALSE to slow
RT_pairsplit0$fasterPreparation[RT_pairsplit0$fasterPreparation == "TRUE"] = "short"
RT_pairsplit0$fasterPreparation[RT_pairsplit0$fasterPreparation == "FALSE"] = "long"
RT0_forplot = RT_pairsplit0 %>%
group_by(fasterPreparation) %>%
summarise(mean.RT = mean(RT, na.rm = TRUE),
sd.RT = sd(RT, na.rm = TRUE),
n.RT = n()) %>%
mutate(se.RT = sd.RT / sqrt(n.RT),
lower.ci.RT = mean.RT - qt(1 - (0.05 / 2), n.RT - 1) * se.RT,
upper.ci.RT = mean.RT + qt(1 - (0.05 / 2), n.RT - 1) * se.RT)
# plot
plot_RT0_pPEP = ggplot(RT0_forplot, aes(x=factor(fasterPreparation), y=mean.RT, group=1)) +
geom_errorbar(aes(ymin=lower.ci.RT, ymax=upper.ci.RT), width=.1, color="black", position="dodge") +
geom_line(color="black", width=2) +
geom_point(color="black", position="dodge", shape = 16) +
scale_y_continuous(breaks = c(200,400,600,800,1000), limits = c(0,1000)) +
xlab("Preparation") +
ylab("Execution RT (ms)") +
ggtitle("Experiment 1", subtitle = "Execution phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#plot_RT0_pPEP
# combine allplots
bigplot_Exp0PEP <- plot_grid(plot_prepRT0_pPEP, plot_ACC0_pPEP, plot_RT0_pPEP,
ncol = 3,
rel_heights = c(1,1),
rel_widths = c(1,1),
labels = c("a","b", "c"),
label_size = 12,
align = "v"
)
bigplot_Exp0PEP
# Exp0 is Exp1 in the paper, hence the figure name
ggsave("Experiment1_PrepRTACCExeRT.png", width = 14, height = 6, units = "cm")
knitr::opts_chunk$set(echo = FALSE)
library(afex)
library(BayesFactor)
library(car)
library(cowplot)
library(DataCombine)
library(data.table)
library(extrafont)
library(ez)
library(ggpubr)
library(gridExtra)
library(knitr)
library(tidyverse)
# clear directory
rm(list=ls())
# open files
input_Exp0 = data.frame()
files <- dir(path = "../../Data/Raw", pattern = "CIA_Preparation_Exp0_*")
for (i in files) {
tmp <- read_csv(file = file.path("../../Data/Raw/", i), col_types = cols())
# add the files to the data frame
input_Exp0 = rbind (input_Exp0, tmp)
rm(tmp)
}
# select UPPSP data
UPPSP_Exp0 = input_Exp0 %>%
filter(factor %in% c("Perseverance", "Premeditation", "Positive Urgency", "Negative Urgency", "Sensation Seeking"))
#filter(block_number == 'undefined')
# convert some factor variables to numeric variables
input_Exp0$block_number = as.numeric(as.character(input_Exp0$block_number))
input_Exp0$prepRT = as.numeric(as.character(input_Exp0$prepRT))
input_Exp0$rt = as.numeric(as.character(input_Exp0$rt))
# add numeric equivalent for correct variable; correct = TRUE = 1, correct = FALSE = 0
input_Exp0 = input_Exp0 %>%
mutate(acc = correct)
input_Exp0$acc = as.integer(as.logical(input_Exp0$acc))
# filter UPPS data for the analysis
input_Exp0 = input_Exp0 %>%
filter(block_number <= 100)
# rename prolific_ID into participant
names(input_Exp0)[1] = "participant"
# demographics
demographics = input_Exp0 %>%
summarise(mean= mean(age),
sd= sd(age),
max = max(age),
min = min(age))
gender = input_Exp0 %>%
filter(block_number == "1") %>%
group_by(gender) %>%
count()
# ACC
# exclude prepRT and exeRT outliers
# calculate mean ACC
ACC_imageonly0 = input_Exp0 %>%
filter(prepRT > 100) %>%
filter(prepRT < 20000) %>%
filter(rt > 100) %>%
filter(rt < 3000) %>%
group_by(participant) %>%
summarise(ACC = mean(acc))
ACC_imageonly0_GM = ACC_imageonly0 %>%
summarise(
ACC = mean(ACC))
kable(ACC_imageonly0_GM, caption = "ACC on image-alone trials", digits = 2)
ACC0_forpaper = ACC_imageonly0 %>%
summarise(mean.ACC = mean(ACC, na.rm = TRUE),
sd.ACC = sd(ACC, na.rm = TRUE),
n.ACC = n()) %>%
mutate(se.ACC = sd.ACC / sqrt(n.ACC),
lower.ci.ACC = mean.ACC - qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC,
upper.ci.ACC = mean.ACC + qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC)
kable(ACC0_forpaper, caption = "ACC across all trials", digits = 2)
# Correct exeRT
# exclude prepRT and exeRT outliers as well as incorrect trials
# calculate mean exeRT
RT_imageonly0 = input_Exp0 %>%
filter(prepRT > 100) %>%
filter(prepRT < 20000) %>%
filter(rt > 100) %>%
filter(rt < 3000) %>%
filter(correct == "TRUE") %>%
group_by(participant) %>%
summarise(RT = mean(rt))
RT_imageonly0_GM = RT_imageonly0 %>%
summarise(
RT = mean(RT))
kable(RT_imageonly0_GM, caption = "ExeRT on image-alone trials", digits = 2)
# calculate removed trials (i.e., incorrect trials) in %
#100 - ((100/9770)*8540)
RT0_forpaper = RT_imageonly0 %>%
summarise(mean.RT = mean(RT, na.rm = TRUE),
sd.RT = sd(RT, na.rm = TRUE),
n.RT = n()) %>%
mutate(se.RT = sd.RT / sqrt(n.RT),
lower.ci.RT = mean.RT - qt(1 - (0.05 / 2), n.RT - 1) * se.RT,
upper.ci.RT = mean.RT + qt(1 - (0.05 / 2), n.RT - 1) * se.RT)
kable(RT0_forpaper, caption = "ExeRT across all trials", digits = 2)
input_pairsplit_Exp0 = input_Exp0 %>%
arrange(participant, block_number) %>%
mutate(pair = ceiling(block_number/2)) %>% # create pair number based on block number; block 1 and 2 will be pair 1, etc.
group_by(participant, pair) %>%
mutate(n_block_in_pair = n(), # count number of blocks in a pair; due to missing data, some 'pair's have only one block
Pair_PrepRT = mean(prepRT), # calculate the mean prepRT of each pair
fasterPreparation = (prepRT < Pair_PrepRT), # determine whether each block is the one with shorter prepRT in the pair
diff = prepRT - Pair_PrepRT) %>% # calculate the difference between raw prepRT and the average of each pair
filter(n_block_in_pair == 2, # select only pairs that have two blocks
diff != 0) # select pairs where the prepRT of the two blocks differ
# check: each participant should have equal number of faster and slower blocks
#table(input_pairsplit_Exp0$participant, input_pairsplit_Exp0$fasterPreparation)
# calculate mean prepRT depending on pair-split
prepRT_pairsplit0 = input_pairsplit_Exp0 %>%
filter(prepRT > 100) %>%
filter(prepRT < 20000) %>%
filter(rt > 100) %>%
filter(rt < 3000) %>%
group_by(participant, fasterPreparation) %>%
summarise(prepRT = mean(prepRT))
prepRT_pairsplit0_GM = prepRT_pairsplit0 %>%
group_by(fasterPreparation) %>%
summarise(
prepRT = mean(prepRT))
kable(prepRT_pairsplit0_GM, caption = "PrepRT for fast vs slow preparation", digits = 2)
# calculate mean ACC depending on pair-split
ACC_pairsplit0 = input_pairsplit_Exp0 %>%
filter(prepRT > 100) %>%
filter(prepRT < 20000) %>%
filter(rt > 100) %>%
filter(rt < 3000) %>%
group_by(participant, fasterPreparation) %>%
summarise(ACC = mean(acc))
ACC_pairsplit0_GM = ACC_pairsplit0 %>%
group_by(fasterPreparation) %>%
summarise(
ACC = mean(ACC))
kable(ACC_pairsplit0_GM, caption = "ACC depending on fast vs slow preparation", digits = 2)
# ACC including CIs of the pair-split analysis
ACC_pairsplit0_CIs = ACC_pairsplit0 %>%
group_by(fasterPreparation) %>%
summarise(mean.ACC = mean(ACC, na.rm = TRUE),
sd.ACC = sd(ACC, na.rm = TRUE),
n.ACC = n()) %>%
mutate(se.ACC = sd.ACC / sqrt(n.ACC),
lower.ci.ACC = mean.ACC - qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC,
upper.ci.ACC = mean.ACC + qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC)
kable(ACC_pairsplit0_CIs, caption = "ACC depending on fast vs slow preparation", digits = 2)
# paired-samples t-test
source("pairwise_comparisons.R")
ACC_pairsplit0_wide = ACC_pairsplit0 %>%
dcast(participant ~fasterPreparation, value.var = "ACC")
ACC_pairsplit0_pw = TES(ACC_pairsplit0_wide$`FALSE`, ACC_pairsplit0_wide$`TRUE`, paired=TRUE)
row.names(ACC_pairsplit0_pw) = c('ACC')
kable(ACC_pairsplit0_pw, caption = "Paired-samples t-test on ACC", digits = 2)
# calculate mean exeRT depending on pair-split
RT_pairsplit0 = input_pairsplit_Exp0 %>%
filter(prepRT > 100) %>%
filter(prepRT < 20000) %>%
filter(rt > 100) %>%
filter(rt < 3000) %>%
filter(correct == "TRUE") %>%
group_by(participant, fasterPreparation) %>%
summarise(RT = mean(rt))
RT_pairsplit0_GM = RT_pairsplit0 %>%
group_by(fasterPreparation) %>%
summarise(
RT = mean(RT))
kable(RT_pairsplit0_GM, caption = "ExeRT depending on fast vs slow preparation", digits = 2)
# paired-samples t-test
source("pairwise_comparisons.R")
RT_pairsplit0_wide = RT_pairsplit0 %>%
dcast(participant ~fasterPreparation, value.var = "RT")
RT_pairsplit0_pw = TES(RT_pairsplit0_wide$`FALSE`, RT_pairsplit0_wide$`TRUE`, paired=TRUE)
row.names(RT_pairsplit0_pw) = c('RT')
kable(RT_pairsplit0_pw, caption = "Paired-samples t-test on exeRT", digits = 2)
# get data ready and plot mean prepRT of the pair-split analysis
# fasterPreparation: rename TRUE to short, rename FALSE to long
prepRT_pairsplit0$fasterPreparation[prepRT_pairsplit0$fasterPreparation == "TRUE"] = "short"
prepRT_pairsplit0$fasterPreparation[prepRT_pairsplit0$fasterPreparation == "FALSE"] = "long"
prepRT0_forplot = prepRT_pairsplit0 %>%
group_by(fasterPreparation) %>%
summarise(mean.prepRT = mean(prepRT, na.rm = TRUE),
sd.prepRT = sd(prepRT, na.rm = TRUE),
n.prepRT = n()) %>%
mutate(se.prepRT = sd.prepRT / sqrt(n.prepRT),
lower.ci.prepRT = mean.prepRT - qt(1 - (0.05 / 2), n.prepRT - 1) * se.prepRT,
upper.ci.prepRT = mean.prepRT + qt(1 - (0.05 / 2), n.prepRT - 1) * se.prepRT)
# plot
plot_prepRT0_pPEP = ggplot(prepRT0_forplot, aes(x=factor(fasterPreparation), y=mean.prepRT, group=1)) +
geom_errorbar(aes(ymin=lower.ci.prepRT, ymax=upper.ci.prepRT), width=.1, color="black", position="dodge") +
geom_line(color="black", width=2) +
geom_point(color="black", position="dodge", shape=17) +
scale_y_continuous(breaks = c(1000,2000,3000,4000,5000,6000), limits = c(1000,6000)) +
xlab("Preparation") +
ylab("Preparation RT (ms)") +
ggtitle("Experiment 1", subtitle = "Preparation phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#plot_prepRT0_pPEP
# get data ready and plot mean ACC of the pair-split analysis
# fasterPreparation: rename TRUE to fast, rename FALSE to slow
ACC_pairsplit0$fasterPreparation[ACC_pairsplit0$fasterPreparation == "TRUE"] = "short"
ACC_pairsplit0$fasterPreparation[ACC_pairsplit0$fasterPreparation == "FALSE"] = "long"
ACC0_forplot = ACC_pairsplit0 %>%
group_by(fasterPreparation) %>%
summarise(mean.ACC = mean(ACC, na.rm = TRUE),
sd.ACC = sd(ACC, na.rm = TRUE),
n.ACC = n()) %>%
mutate(se.ACC = sd.ACC / sqrt(n.ACC),
lower.ci.ACC = mean.ACC - qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC,
upper.ci.ACC = mean.ACC + qt(1 - (0.05 / 2), n.ACC - 1) * se.ACC)
# plot
plot_ACC0_pPEP = ggplot(ACC0_forplot, aes(x=factor(fasterPreparation), y=mean.ACC, group=1)) +
geom_errorbar(aes(ymin=lower.ci.ACC, ymax=upper.ci.ACC), width=.1, color="black", position="dodge") +
geom_line(color="black", width=2) +
geom_point(color="black", position="dodge", stat="identity", shape=16) +
scale_y_continuous(breaks = c(0.6,0.7,0.8,0.9,1.0), limits = c(0.6,1)) +
xlab("Preparation") +
ylab("Accuracy") +
ggtitle("Experiment 1", subtitle = "Execution phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#plot_ACC0_pPEP
# get data ready and plot mean exeRT of the pair-split analysis
# fasterPreparation: rename TRUE to fast, rename FALSE to slow
RT_pairsplit0$fasterPreparation[RT_pairsplit0$fasterPreparation == "TRUE"] = "short"
RT_pairsplit0$fasterPreparation[RT_pairsplit0$fasterPreparation == "FALSE"] = "long"
RT0_forplot = RT_pairsplit0 %>%
group_by(fasterPreparation) %>%
summarise(mean.RT = mean(RT, na.rm = TRUE),
sd.RT = sd(RT, na.rm = TRUE),
n.RT = n()) %>%
mutate(se.RT = sd.RT / sqrt(n.RT),
lower.ci.RT = mean.RT - qt(1 - (0.05 / 2), n.RT - 1) * se.RT,
upper.ci.RT = mean.RT + qt(1 - (0.05 / 2), n.RT - 1) * se.RT)
# plot
plot_RT0_pPEP = ggplot(RT0_forplot, aes(x=factor(fasterPreparation), y=mean.RT, group=1)) +
geom_errorbar(aes(ymin=lower.ci.RT, ymax=upper.ci.RT), width=.1, color="black", position="dodge") +
geom_line(color="black", width=2) +
geom_point(color="black", position="dodge", shape = 16) +
scale_y_continuous(breaks = c(200,400,600,800,1000), limits = c(0,1000)) +
xlab("Preparation") +
ylab("Execution RT (ms)") +
ggtitle("Experiment 1", subtitle = "Execution phase") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
theme(text = element_text(face = "plain", size = 8)) +
theme(axis.text.y = element_text(size = 8, color = "black")) +
theme(axis.text.x = element_text(size = 8, color = "black", angle = 0, hjust = 0.5)) +
theme(axis.title.x = element_text(face = "plain", size = 8)) +
theme(axis.title.x = element_text(margin = margin(t = 4, r = 0, b = 0, l = 00))) +
theme(axis.title.y = element_text(face = "plain", size = 8)) +
theme(axis.title.y = element_text(margin = margin(t = 0, r = 4, b = 0, l = 0))) +
theme(axis.ticks = element_line(size = 1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#plot_RT0_pPEP
# combine allplots
bigplot_Exp0PEP <- plot_grid(plot_prepRT0_pPEP, plot_ACC0_pPEP, plot_RT0_pPEP,
ncol = 3,
rel_heights = c(1,1),
rel_widths = c(1,1),
labels = c("a","b", "c"),
label_size = 12,
align = "v"
)
bigplot_Exp0PEP
# Exp0 is Exp1 in the paper, hence the figure name
ggsave("Experiment1_PrepRTACCExeRT.png", width = 14, height = 6, units = "cm")
